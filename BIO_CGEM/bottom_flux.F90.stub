!This needs to be rewritten as f(nf), as in surface fluxes
subroutine cgem_flux(ff,ff_new,dT,nz,dz,T,S,Wind,pH,istep)

!This is called after cgem_step, which returns ff_new
!This modifies the surface and bottom cells of ff_new
use cgem, only:Which_fluxes,iO2surf,iDICsurf,iO2,iDIC,pCO2,iALK,iSi,iPO4, &
        & iSOC,iA,iNO3,iNH4,iNutEx,nospA,nf,fmin
use cgem_utils 
use schism_glbl, only : rkind

implicit none

integer, intent(in) :: istep
real(rkind), intent(in) :: dT,pH,ff
real(rkind), intent(in) :: dz,T,S,Wind 
integer,intent(in) :: nz
real(rkind) :: T_sfc, Sal_sfc, O2_sfc, Sc, Op_umole, rhow, Op, OsDOp
real(rkind) :: Vtrans, alpha_O2, O2_atF,zs, DIC_sfc, CO2_atF
real(rkind) :: SDay = 86400.d0
!------------------------------------------------------------------
!Bottom flux
  real(rkind) :: SOC, DICFlux,tau,O2Flux,NO3Flux,NH4Flux,PO4Flux,SiFlux,ALKFlux
  real(rkind), dimension(nf) :: f


if(Which_fluxes(iO2surf).eq.1) then
!--------------------------------------------------------------
! Calc  O2_atF, the sea surface vertical flux of O2
!--------------------------------------------------------------
   T_sfc    = T(1)       ! Temperature (C)   in sfc layer, k=1
   Sal_sfc  = S(1)       ! Salinity          in sfc layer, k=1
   O2_sfc   = ff_new(1,iO2) ! O2 (mmol-O2/m3) in sfc layer, k=1

   Sc       = SchmidtNumber(Sal_sfc,T_sfc,0)  ! Schmidt number,
                                                          !   0 (zero)
                                                          !   for O2

   Op_umole = o2sat(Sal_sfc,T_sfc)     ! O2 saturation,
                                                   !    (umol-O2/kg)

   rhow     = sw_dens0(Sal_sfc,T_sfc)  ! water density [kg/m3]

   Op       = rhow * Op_umole * 1.0E-3 ! O2 saturation,
                                                   !    (mmol-O2/m3)
   OsDOp    = O2_sfc/Op

!--------------------------------------------------------------
!  Vtrans below is the O2 transfer vel (m/s)
!
!  Vtrans   = (5.9*(kw)*(OsDOp*OsDOp))*(Sc)**X
!    where kw and Sc are dependent on Wind Speed.
!  Values kw and X are from Liss and Merlivat, 1986.
!  Factor of OsDOp**2 is from Justic, et. al 2002 
!   for when saturation levels are above 125%.
!---------------------------------------------------------------
 if(Wind.lt.3.6) then
   Vtrans        = DMAX1((5.9 * (0.17*Wind)         &
   &              * Sc**(-2./3.) / SDay), 0.)
 else if(Wind.le.13.) then
   Vtrans        = DMAX1((5.9 *(2.85*Wind - 9.65 )    &
   &              / SQRT(Sc) / SDay), 0.)
 else
   Vtrans        = DMAX1((5.9 *(5.9*Wind - 49.3 )    &
   &              / SQRT(Sc) / SDay), 0.)
 endif
 if(OsDOp.gt.1.25) Vtrans = Vtrans * (OsDOp*OsDOp)

   alpha_O2       = 1.025

   O2_atF         = Vtrans*(O2_sfc - alpha_O2*Op)
                                           ! flux of O2 thru
                                           ! the
                                           ! sea sfc
                                           ! ((mmol-O2/m2/sec)
                                           ! negative means
                                           ! into
   ff_new(1,iO2) = DMAX1(ff_new(1,iO2) - O2_atF/dz(1)*dT,fmin(iO2))

endif

if(Which_fluxes(iDICsurf).eq.1) then
!--------------------------------------------------------------
! Calc  SFLUX_CO2, the sea surface vertical flux of CO2
!--------------------------------------------------------------
               zs      = dz(1)       ! Thickness (m.) of the water column

               T_sfc   = T(1)        ! Temperature (C) in sfc layer, k=1
               Sal_sfc = S(1)        ! Salinity        in sfc layer, k=1
               DIC_sfc = ff_new(1,iDIC) ! Dissolved Inorganic Carbon
                                         !    (mmol m-3) in sfc layer, k=1

             !----------------------------------------------------------
             ! Units of gas_exchange are mmol CO2 m-2 s-1 
             !----------------------------------------------------------
!use mocsy instead but calculate to compare
             CO2_atF = gas_exchange(T_sfc,Sal_sfc,DIC_sfc,zs,pH,pCO2)
             ff_new(1,iDIC) = DMAX1(ff_new(1,iDIC) - CO2_atF/dz(1)*dT,fmin(iDIC))

else

        write(6,*) "Invalid DIC surface flux",Which_fluxes(iDICsurf)
        stop
endif

!-- BOTTOM FLUXES -------------------------------------------------------------------------
if(Which_fluxes(iSOC).eq.1) then
!Murrell and Lehrter sediment oxygen consumption
       SOC = - 0.0235*2.**(.1*T(nz))*ff_new(nz,iO2)
               ff_new(nz,iO2) = DMAX1(ff_new(nz,iO2)  + SOC/  &
     & dz(nz)*dT/SDay,fmin(iO2))
       DICFlux = (-3.7*log(DMAX1(ff_new(nz,iO2),1.e-8)) + 19.4)*SOC
               ff_new(nz,iDIC) = DMAX1(ff_new(nz,iDIC) + DICFlux/  &
     & dz(nz)*dT/SDay,fmin(iDIC))
else
       write(6,*) "Invalid DIC surface flux",Which_fluxes(iSOC)
       stop
endif


if(Which_fluxes(iNutEx).eq.1) then
!NO3 Exchange
       NO3Flux = 0.0057*ff_new(nz,iO2) - 0.52
               ff_new(nz,iNO3) = DMAX1(ff_new(nz,iNO3) + NO3Flux/ &
     & dz(nz)*dT/SDay,fmin(iNO3))

!NH4 Exchange
       NH4Flux = -1.55*NO3Flux + 0.69
               ff_new(nz,iNH4) = DMAX1(ff_new(nz,iNH4) + NH4Flux/ &
     & dz(nz)*dT/SDay,fmin(iNH4))

!PO4 Exchange
      PO4Flux = 0.094*NH4Flux - 0.0125
               ff_new(nz,iPO4) = DMAX1(ff_new(nz,iPO4) + PO4Flux/ &
     & dz(nz)*dT/SDay,fmin(iPO4))

!Si Exchange
      SiFlux = 1.68 
               ff_new(nz,iSi)  = DMAX1(ff_new(nz,iSi)  + SiFlux/ &
     & dz(nz)*dT/SDay,fmin(iSi))

!ALK Exchange
      ALKFlux = NO3Flux - NH4Flux + PO4Flux
               ff_new(nz,iALK)  = DMAX1(ff_new(nz,iALK)  + ALKFlux/ &
     & dz(nz)*dT/SDay,fmin(iALK))
endif


RETURN

end subroutine cgem_flux 
